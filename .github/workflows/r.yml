# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      matrix:
        config:
          - {os: ubuntu-20.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: windows-latest, r: "release"}

    steps:
      - uses: actions/checkout@v3
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@f57f1301a053485946083d7a45022b278929a78a
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install dependencies
        run: |
          install.packages(c("Rcpp", "RcppParallel", "rstan", "rstantools", "BH", "RcppEigen", "StanHeaders", "roxygen2"))
        shell: Rscript {0}
      - name: Check
        run: |
          Rscript -e 'roxygen2::roxygenise("dshare")'
          R CMD build dshare
          PKG=$(find . -maxdepth 1 -type f -name "dshare*.tar.gz")
          R CMD check $PKG --no-manual --no-build-vignettes 
        shell: bash
      - name: Archive installation log
        uses: actions/upload-artifact@v3
        with:
          name: installation-log
          path: D:/a/dshare/dshare/dshare.Rcheck/00install.out
